{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/GitHub/Proyecto_Integrador/taskmaster_frontend/src/components/KanbanBoard.js\",\n  _s = $RefreshSig$();\n// src/components/KanbanBoard.js\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport api from '../axiosConfig'; // Usar Axios para hacer peticiones al backend\nimport lista from ',/lista';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard() {\n  _s();\n  const [listas, setListas] = useState([]);\n  const [tareas, setTareas] = useState([]);\n  useEffect(() => {\n    // Llamada para obtener listas y tareas desde el backend\n    api.get('/listas').then(response => setListas(response.data));\n    api.get('/tareas').then(response => setTareas(response.data));\n  }, []);\n  const onDragEnd = result => {\n    // Lógica para manejar el movimiento de tareas entre listas\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    // Actualización lógica de las tareas al moverlas entre listas\n    const updatedTareas = [...tareas];\n    const [movedTarea] = updatedTareas.splice(source.index, 1);\n    movedTarea.lista = destination.droppableId;\n    updatedTareas.splice(destination.index, 0, movedTarea);\n    setTareas(updatedTareas);\n\n    // Aquí puedes enviar una solicitud para actualizar la tarea en el backend\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: listas.map(lista => /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: String(lista.id),\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"lista\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: lista.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), tareas.filter(tarea => tarea.lista === lista.id).map((tarea, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: String(tarea.id),\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"tarea\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tarea.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this)\n        }, tarea.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, lista.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"lWp0q56Jqnw1ePYaJguahnewRR0=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","api","lista","jsxDEV","_jsxDEV","KanbanBoard","_s","listas","setListas","tareas","setTareas","get","then","response","data","onDragEnd","result","destination","source","updatedTareas","movedTarea","splice","index","droppableId","children","map","String","id","provided","ref","innerRef","droppableProps","className","nombre","fileName","_jsxFileName","lineNumber","columnNumber","filter","tarea","draggableId","draggableProps","dragHandleProps","titulo","placeholder","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/GitHub/Proyecto_Integrador/taskmaster_frontend/src/components/KanbanBoard.js"],"sourcesContent":["// src/components/KanbanBoard.js\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport api from '../axiosConfig'; // Usar Axios para hacer peticiones al backend\nimport lista from ',/lista';\n\n\nfunction KanbanBoard() {\n  const [listas, setListas] = useState([]);\n  const [tareas, setTareas] = useState([]);\n\n  useEffect(() => {\n    // Llamada para obtener listas y tareas desde el backend\n    api.get('/listas').then((response) => setListas(response.data));\n    api.get('/tareas').then((response) => setTareas(response.data));\n  }, []);\n\n  const onDragEnd = (result) => {\n    // Lógica para manejar el movimiento de tareas entre listas\n    if (!result.destination) return;\n\n    const { source, destination } = result;\n\n    // Actualización lógica de las tareas al moverlas entre listas\n    const updatedTareas = [...tareas];\n    const [movedTarea] = updatedTareas.splice(source.index, 1);\n    movedTarea.lista = destination.droppableId;\n    updatedTareas.splice(destination.index, 0, movedTarea);\n    setTareas(updatedTareas);\n\n    // Aquí puedes enviar una solicitud para actualizar la tarea en el backend\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      {listas.map((lista) => (\n        <Droppable key={lista.id} droppableId={String(lista.id)}>\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.droppableProps} className=\"lista\">\n              <h2>{lista.nombre}</h2>\n              {tareas\n                .filter((tarea) => tarea.lista === lista.id)\n                .map((tarea, index) => (\n                  <Draggable key={tarea.id} draggableId={String(tarea.id)} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className=\"tarea\"\n                      >\n                        <p>{tarea.titulo}</p>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  );\n}\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}